x Do not fetch content if click on node tied to already opened note.
x Do not save a newly loaded note.

x Dispatch click node on app load to select the last opened note
x refactor the "add node and select" action.
x Add new note would present a blank page on Editor
x To fix: with folder node selected, switching to a note would fetch *and* save.  No save should be performed.

x Add created date and modified date to editor content
x To fix: Loading/switching note triggers a content change, triggers refresh of modified date and consequently a save.
  -> Fixed by changing Editor from controlled to uncontrolled. So now loading a note would rerender the Editor instead of triggering a content-change action.
x Save newly created note
x The saved note title should appear on corresponding node.
x delete node deletes note in DB, and other necessary operations.
x Use selectors to decouple state shape.
x If no tree saved, created default tree and add node. And save it.
x Fix Bug: edit title, then select another note (not folder) does not save the new title. Race condition: content of selected note is loaded before observer could save previous note!
  -> Solution: Switching note triggers immediate save.
  -> Fixed.  But must review code and punder design. Should editorContentObserver be a singleton?
x Deleting folder
  ? -> If folder contains notes, ask for confirmation
  x -> deletes descendant notes.
x Upon deleting a folder, switch active node to parent.

x Fix bug: quick successive notes creation skips saving of some notes.

x Implement local storage
  x -> save to and load from local storage
  x -> delete from local storage

x Use snapshot tests.

x Implement type checking
  x -> Annotate the handler functions passed to the React components
  x -> NodeTitle.tsx changed, must retest UI behavior.

x Sanitize (e.g. user input titles)!

x Minimal tree (better suited for mobile)

x The active path must always lead to the selected child of the folder, of which the content listed by the tree. If the folder has no content, i.e. no child selected, then the last entry of the path must be empty string.  This way, we can consistently and reliably determine the current folder, whose content is listed by the tree, by simply slicing off the last entry of the active path.

Do we really need a default root node?!

REMOVE resolution in package.json that temp fix for https://github.com/facebook/jest/issues/7709
  "resolutions": {
    "write-file-atomic": "2.4.1"
  },
  rm -r node_modules
  npx npm-force-resolutions
  npm install

x Set expanded = false for every folder node created.

x Remove react-split-pane

Warn on page unload when content unsaved:
// Check for unsaved data
window.onbeforeunload = function() {
  if (change.length() > 0) {
    return 'There are unsaved changes. Are you sure you want to leave?';
  }
}

Revisit QuillJs bug
    https://github.com/quilljs/quill/issues/1940
    https://github.com/zenoamaro/react-quill/issues/309

~ Make reducers pure functions by removing UUID creation, calls to Date.now(), etc.
~ Define typescript type ActionPayload for action object with a payload property.
~ Use state selectors instead of getState().<sliceOfState>
~ Convert use of node type literals ('item' and 'folder') to enum or constants, or something similar.

How to handle error (promises) from Observers?
How to handle offline mode?  Do we let user create/modify notes offline and store them locally? How do we reconciliate the local data with the remote data once connection is back?
Active node should be the persistent across sessions.
Clean up, refactor client's index.js
Should adopt convention for thunk return value:  1) a Promise resolving to an action obj in the successful case or 2) a Promise rejected with an Error obj.
Upon deleting a note, switch active node to previous note in folder; if no note in folder, switch to folder and disable editor
  -> OR: switch to previous active node.
Upon creation of new note, auto select editor body.
? Deselecting note with empty content deletes the note.
Retry save or load on failure
recycle bin

Update/create tests for:
  x DrawerButton.tsx
  x NotesListDrawer.tsx
  x NotesListContainer.tsx
  x NotesList.tsx
  x NodeTitle.tsx
  x Editor.tsx
  x editorContentObserver.ts
  x Main.js
  x index.js

Remove unused navigatePathThunkAction
Review remoteStorage data modules for discrepancies.
